{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","servises/UserId.tsx","components/TodoList/TodoList.tsx","servises/NewId.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","getUserById","classNames","TodoList","todos","map","getNewId","Math","max","App","useState","todosFromServer","setTodos","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","trim","newTodo","currentTodos","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac45aed1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\n\ntype UserProps = {\n  user: {\n    id: number;\n    name: string;\n    username: string;\n    email: string;\n  };\n};\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../Type/todos';\nimport { UserInfo } from '../UserInfo';\nimport { getUserById } from '../../servises/UserId';\n\ntype TodoProps = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<TodoProps> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const user = getUserById(userId);\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo ',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo\n          user={user}\n        />\n      )}\n\n    </article>\n  );\n};\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React from 'react';\nimport { Todo } from '../../Type/todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodosListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<TodosListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import { Todo } from '../Type/todos';\n\nexport function getNewId(todos: Todo[]) {\n  const newId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return newId + 1;\n}\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { getNewId } from './servises/NewId';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(!event.target.value.trim());\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(userId === 0);\n\n    if (!title.trim() || userId === 0) {\n      return;\n    }\n\n    const newTodo = {\n      id: getNewId(todos),\n      title,\n      completed: false,\n      userId,\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"InputTitle\">\n            Title:\n          </label>\n          <input\n            id=\"InputTitle\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:\n          </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option\n                key={id}\n                value={id}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}